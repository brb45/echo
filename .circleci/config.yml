version: 2
jobs:
  build:

    working_directory: ~/app

    docker:
      - image: circleci/openjdk:8-jdk

    steps:

      - checkout
      - run: ./go test-unit
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - run: ./go build

      - persist_to_workspace:
          root: build/libs
          paths:
            - echo.jar

  docker:

    docker:
      - image: docker:dind

    steps:

      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: build/libs
      - run:
          name: Build docker image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $DOCKER_REGISTRY
            docker build . --tag $DOCKER_REGISTRY/echo
            docker push $DOCKER_REGISTRY/echo

  deploy:

    docker:
      - image: circleci/openjdk:8-jdk

    steps:
      - add_ssh_keys:
          fingerprints:
            - 5b:51:48:b1:58:f8:3b:2a:02:e2:a2:7e:18:17:8f:23
      - run: ssh $DEPLOY_USER@$DEPLOY_HOST "sh ${DEPLOY_PATH}/bin/update echo"

  healthcheck:

    docker:
      - image: circleci/openjdk:8-jdk

    steps:
      - run: curl --connect-timeout 60 -s -f -o /dev/null "${SITE_URL}/hello"

workflows:
  version: 2
  cd_pipeline:
    jobs:
      - build
      - docker:
          filters:
            branches:
              only: master
          requires:
            - build
      - deploy:
          requires:
            - docker
      - healthcheck:
          requires:
            - deploy
